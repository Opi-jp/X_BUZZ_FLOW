#!/bin/bash

# INTEGRATE„Çπ„ÉÜ„ÉÉ„Éó„ÅÆÈ´òÈÄü„ÉÜ„Çπ„Éà„Çπ„ÇØ„É™„Éó„Éà
# „Çµ„Éº„Éê„ÉºÂÜçËµ∑Âãï„Å™„Åó„Åß„ÉÜ„Çπ„ÉàÂèØËÉΩ

SESSION_ID=${1:-"2cf500f3-2ece-4961-a7f5-dc3ef011ae38"}

echo "üîç Phase 1 INTEGRATE„ÅÆÈ´òÈÄü„ÉÜ„Çπ„Éà"
echo "   „Çª„ÉÉ„Ç∑„Éß„É≥ID: $SESSION_ID"
echo ""

# 1. ÁèæÂú®„ÅÆ„Çπ„ÉÜ„Éº„Çø„Çπ„ÇíÁ¢∫Ë™ç
echo "üìä ÁèæÂú®„ÅÆ„Çπ„ÉÜ„Éº„Çø„Çπ:"
node -e "
const { PrismaClient } = require('./app/generated/prisma');
const prisma = new PrismaClient();
(async () => {
  const session = await prisma.cotSession.findUnique({
    where: { id: '$SESSION_ID' },
    include: { phases: { where: { phaseNumber: 1 } } }
  });
  if (!session) {
    console.log('‚ùå „Çª„ÉÉ„Ç∑„Éß„É≥„ÅåË¶ã„Å§„Åã„Çä„Åæ„Åõ„Çì');
    process.exit(1);
  }
  console.log('- Status:', session.status);
  console.log('- Step:', session.currentStep);
  console.log('- Phase 1 ExecuteÂÆå‰∫Ü:', !!session.phases[0]?.executeResult);
  await prisma.\$disconnect();
})();
"

# 2. „Çπ„ÉÜ„Éº„Çø„Çπ„Çí„É™„Çª„ÉÉ„Éà
echo ""
echo "üîÑ „Çπ„ÉÜ„Éº„Çø„Çπ„Çí„É™„Çª„ÉÉ„Éà‰∏≠..."
node -e "
const { PrismaClient } = require('./app/generated/prisma');
const prisma = new PrismaClient();
(async () => {
  await prisma.cotSession.update({
    where: { id: '$SESSION_ID' },
    data: {
      status: 'EXECUTING',
      currentStep: 'INTEGRATE',
      lastError: null
    }
  });
  console.log('‚úÖ „É™„Çª„ÉÉ„ÉàÂÆå‰∫Ü');
  await prisma.\$disconnect();
})();
"

# 3. INTEGRATE„ÇíÂÆüË°å
echo ""
echo "üöÄ INTEGRATE„Çπ„ÉÜ„ÉÉ„Éó„ÇíÂÆüË°å‰∏≠..."
echo "   („Ç®„É©„Éº„Åå„ÅÇ„ÇãÂ†¥Âêà„ÅØ‰∏ã„Å´Ë°®Á§∫„Åï„Çå„Åæ„Åô)"
echo ""

curl -X POST http://localhost:3000/api/viral/cot-session/$SESSION_ID/process -s | jq '.' || echo "‚ùå API„Ç®„É©„Éº"

# 4. ÁµêÊûú„ÇíÁ¢∫Ë™ç
echo ""
echo "üìã ÂÆüË°åÂæå„ÅÆ„Çπ„ÉÜ„Éº„Çø„Çπ:"
sleep 2
node -e "
const { PrismaClient } = require('./app/generated/prisma');
const prisma = new PrismaClient();
(async () => {
  const session = await prisma.cotSession.findUnique({
    where: { id: '$SESSION_ID' }
  });
  console.log('- Status:', session.status);
  console.log('- Error:', session.lastError || '„Å™„Åó');
  await prisma.\$disconnect();
})();
"