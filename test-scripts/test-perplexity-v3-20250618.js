#!/usr/bin/env node
require('dotenv').config({ path: '.env.local' });

const fs = require('fs').promises;
const path = require('path');

async function testPerplexityV3() {
  try {
    // ÊîπÂñÑÁâàv3„ÅÆ„Éó„É≠„É≥„Éó„Éà„Éï„Ç°„Ç§„É´„ÇíË™≠„ÅøËæº„ÇÄ
    const promptPath = path.join(process.cwd(), 'lib/prompts/perplexity/collect-topics-draft-v3.txt');
    let promptTemplate = await fs.readFile(promptPath, 'utf-8');
    
    // Â§âÊï∞„ÇíÁΩÆÊèõ
    const variables = {
      theme: 'AI„Å®ÂÉç„ÅçÊñπ',
      platform: 'Twitter',
      style: '„Ç®„É≥„Çø„Éº„ÉÜ„Ç§„É°„É≥„Éà'
    };
    
    Object.entries(variables).forEach(([key, value]) => {
      const regex = new RegExp(`\\$\\{${key}\\}`, 'g');
      promptTemplate = promptTemplate.replace(regex, value);
    });
    
    console.log('üìù ÊîπÂñÑÁâàv3„Éó„É≠„É≥„Éó„Éà:');
    console.log('‚îÄ'.repeat(80));
    console.log(promptTemplate.substring(0, 500) + '...\n[‰ª•‰∏ãÁúÅÁï•]');
    console.log('‚îÄ'.repeat(80));
    
    // Perplexity APIÂëº„Å≥Âá∫„Åó
    console.log('\nüîÑ Perplexity API„ÇíÂëº„Å≥Âá∫„Åó‰∏≠...\n');
    
    const response = await fetch('https://api.perplexity.ai/chat/completions', {
      method: 'POST',
      headers: {
        'Authorization': `Bearer ${process.env.PERPLEXITY_API_KEY}`,
        'Content-Type': 'application/json'
      },
      body: JSON.stringify({
        model: 'llama-3.1-sonar-large-128k-online',
        messages: [
          {
            role: 'system',
            content: 'Ë≥™Âïè„ÅÆÊÑèÂõ≥„ÇíÁêÜËß£„Åó„ÄÅ2„Å§„ÅÆ„Éà„Éî„ÉÉ„ÇØ„ÇíJSONÂΩ¢Âºè„ÅßÊèê‰æõ„Åó„Å¶„Åè„Å†„Åï„ÅÑ„ÄÇÂøÖ„Åö„Åô„Åπ„Å¶„ÅÆÂøÖÈ†à„Éï„Ç£„Éº„É´„Éâ„ÇíÂê´„ÇÅ„Å¶„Åè„Å†„Åï„ÅÑ„ÄÇ'
          },
          {
            role: 'user',
            content: promptTemplate
          }
        ],
        max_tokens: 4000,
        temperature: 0.7,
        top_p: 0.9
      })
    });
    
    if (!response.ok) {
      const error = await response.text();
      console.error('‚ùå Perplexity API„Ç®„É©„Éº:', error);
      return;
    }
    
    const data = await response.json();
    const content = data.choices[0].message.content;
    
    console.log('‚úÖ PerplexityÂøúÁ≠îÔºàÂÜíÈ†≠ÈÉ®ÂàÜÔºâ:');
    console.log('‚îÄ'.repeat(80));
    console.log(content.substring(0, 1000) + '...\n');
    console.log('‚îÄ'.repeat(80));
    
    // „Éà„Éî„ÉÉ„ÇØ„ÇíÊäΩÂá∫
    const topics = [];
    const jsonCodeBlocks = content.matchAll(/```json\n([\s\S]*?)\n```/g);
    for (const match of jsonCodeBlocks) {
      try {
        const topic = JSON.parse(match[1]);
        if (topic.TOPIC) {
          topics.push(topic);
        }
      } catch (e) {
        console.error('JSON„Éë„Éº„Çπ„Ç®„É©„Éº:', e.message);
      }
    }
    
    console.log(`\nüìä ÊäΩÂá∫„Åï„Çå„Åü„Éà„Éî„ÉÉ„ÇØÊï∞: ${topics.length}\n`);
    
    topics.forEach((topic, index) => {
      console.log(`‚ú® „Éà„Éî„ÉÉ„ÇØ${index + 1}: ${topic.TOPIC}`);
      console.log(`   Ë®ò‰∫ã„Çø„Ç§„Éà„É´: ${topic.title || 'Êú™Ë®≠ÂÆö'}`);
      console.log(`   „É°„Éá„Ç£„Ç¢: ${topic.source || 'Êú™Ë®≠ÂÆö'}`);
      console.log(`   URL: ${topic.url}`);
      console.log(`   Êó•‰ªò: ${topic.date}`);
      
      // keyPoints„ÅÆÁ¢∫Ë™ç
      if (topic.keyPoints && Array.isArray(topic.keyPoints)) {
        console.log(`   „Ç≠„Éº„Éù„Ç§„É≥„ÉàÊï∞: ${topic.keyPoints.length}`);
        topic.keyPoints.forEach((point, i) => {
          console.log(`     ${i + 1}. ${point.substring(0, 50)}...`);
        });
      } else {
        console.log('   ‚ö†Ô∏è  „Ç≠„Éº„Éù„Ç§„É≥„Éà„ÅåÂá∫Âäõ„Åï„Çå„Å¶„ÅÑ„Åæ„Åõ„Çì');
      }
      
      // summary„Å®perplexityAnalysis„ÅÆÊñáÂ≠óÊï∞Á¢∫Ë™ç
      if (topic.summary) {
        console.log(`   Ë¶ÅÁ¥ÑÊñáÂ≠óÊï∞: ${topic.summary.length}ÊñáÂ≠ó`);
      }
      if (topic.perplexityAnalysis) {
        console.log(`   ÂàÜÊûêÊñáÂ≠óÊï∞: ${topic.perplexityAnalysis.length}ÊñáÂ≠ó`);
      }
      
      console.log('');
    });
    
    // ÊîπÂñÑÂäπÊûú„ÅÆÁ¢∫Ë™ç
    console.log('\nüìã „ÉÅ„Çß„ÉÉ„ÇØ„É™„Çπ„Éà:');
    const checks = {
      'keyPoints„Åå5„Å§Âá∫Âäõ„Åï„Çå„Å¶„ÅÑ„Çã': topics.every(t => t.keyPoints?.length === 5),
      'summary„Åå400ÊñáÂ≠óÂâçÂæå': topics.every(t => t.summary && t.summary.length >= 350 && t.summary.length <= 450),
      'perplexityAnalysis„Åå200ÊñáÂ≠óÂâçÂæå': topics.every(t => t.perplexityAnalysis && t.perplexityAnalysis.length >= 150 && t.perplexityAnalysis.length <= 250),
      'title„Éï„Ç£„Éº„É´„Éâ„ÅåÂê´„Åæ„Çå„Å¶„ÅÑ„Çã': topics.every(t => t.title),
      'source„Éï„Ç£„Éº„É´„Éâ„ÅåÂê´„Åæ„Çå„Å¶„ÅÑ„Çã': topics.every(t => t.source),
      'summary„Å®analysis„ÅåÊòéÁ¢∫„Å´ÂàÜÈõ¢': topics.every(t => t.summary && t.perplexityAnalysis && !t.summary.includes('„Éê„Ç∫'))
    };
    
    Object.entries(checks).forEach(([check, result]) => {
      console.log(`${result ? '‚úÖ' : '‚ùå'} ${check}`);
    });
    
  } catch (error) {
    console.error('„Ç®„É©„Éº:', error);
  }
}

testPerplexityV3();