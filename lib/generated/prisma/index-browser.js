
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('./runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.10.1
 * Query Engine version: 9b628578b3b7cae625e8c927178f15a170e74a9c
 */
Prisma.prismaVersion = {
  client: "6.10.1",
  engine: "9b628578b3b7cae625e8c927178f15a170e74a9c"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.AccountsScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  type: 'type',
  provider: 'provider',
  provider_account_id: 'provider_account_id',
  refresh_token: 'refresh_token',
  access_token: 'access_token',
  expires_at: 'expires_at',
  token_type: 'token_type',
  scope: 'scope',
  id_token: 'id_token',
  session_state: 'session_state'
};

exports.Prisma.Ai_patternsScalarFieldEnum = {
  id: 'id',
  name: 'name',
  description: 'description',
  prompt_template: 'prompt_template',
  example_output: 'example_output',
  success_rate: 'success_rate',
  usage_count: 'usage_count',
  created_at: 'created_at'
};

exports.Prisma.Api_error_logsScalarFieldEnum = {
  id: 'id',
  endpoint: 'endpoint',
  method: 'method',
  status_code: 'status_code',
  error_message: 'error_message',
  stack_trace: 'stack_trace',
  request_body: 'request_body',
  request_headers: 'request_headers',
  user_agent: 'user_agent',
  ip_address: 'ip_address',
  created_at: 'created_at'
};

exports.Prisma.Api_tasksScalarFieldEnum = {
  id: 'id',
  type: 'type',
  session_id: 'session_id',
  phase_number: 'phase_number',
  step_name: 'step_name',
  request: 'request',
  status: 'status',
  retry_count: 'retry_count',
  response: 'response',
  error: 'error',
  created_at: 'created_at',
  started_at: 'started_at',
  completed_at: 'completed_at',
  task_type: 'task_type'
};

exports.Prisma.Buzz_configScalarFieldEnum = {
  id: 'id',
  keywords: 'keywords',
  accounts: 'accounts',
  min_engagement: 'min_engagement',
  min_impressions: 'min_impressions',
  collect_interval: 'collect_interval',
  enabled: 'enabled',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Buzz_postsScalarFieldEnum = {
  id: 'id',
  post_id: 'post_id',
  content: 'content',
  author_username: 'author_username',
  author_id: 'author_id',
  likes_count: 'likes_count',
  retweets_count: 'retweets_count',
  replies_count: 'replies_count',
  impressions_count: 'impressions_count',
  posted_at: 'posted_at',
  collected_at: 'collected_at',
  url: 'url',
  theme: 'theme',
  language: 'language',
  media_urls: 'media_urls',
  hashtags: 'hashtags',
  chroma_id: 'chroma_id',
  author_followers: 'author_followers',
  author_following: 'author_following',
  author_verified: 'author_verified'
};

exports.Prisma.Character_profilesScalarFieldEnum = {
  id: 'id',
  name: 'name',
  display_name: 'display_name',
  age: 'age',
  gender: 'gender',
  occupation: 'occupation',
  catchphrase: 'catchphrase',
  personality: 'personality',
  speaking_style: 'speaking_style',
  expertise: 'expertise',
  backstory: 'backstory',
  philosophy: 'philosophy',
  tone: 'tone',
  voice_style: 'voice_style',
  emoji_style: 'emoji_style',
  created_at: 'created_at',
  updated_at: 'updated_at',
  preferred_news_categories: 'preferred_news_categories',
  news_comment_style: 'news_comment_style',
  topic_expertise: 'topic_expertise'
};

exports.Prisma.Collection_presetsScalarFieldEnum = {
  id: 'id',
  name: 'name',
  description: 'description',
  query: 'query',
  keywords: 'keywords',
  minLikes: 'minLikes',
  minRetweets: 'minRetweets',
  language: 'language',
  category: 'category',
  isActive: 'isActive',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Content_draftsScalarFieldEnum = {
  id: 'id',
  analysis_id: 'analysis_id',
  concept_type: 'concept_type',
  category: 'category',
  title: 'title',
  content: 'content',
  edited_content: 'edited_content',
  explanation: 'explanation',
  buzz_factors: 'buzz_factors',
  target_audience: 'target_audience',
  estimated_engagement: 'estimated_engagement',
  hashtags: 'hashtags',
  visual_guide: 'visual_guide',
  platform: 'platform',
  format: 'format',
  status: 'status',
  editor_notes: 'editor_notes',
  metadata: 'metadata',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Cot_draft_performanceScalarFieldEnum = {
  id: 'id',
  draft_id: 'draft_id',
  likes_30m: 'likes_30m',
  retweets_30m: 'retweets_30m',
  replies_30m: 'replies_30m',
  impressions_30m: 'impressions_30m',
  likes_1h: 'likes_1h',
  retweets_1h: 'retweets_1h',
  replies_1h: 'replies_1h',
  impressions_1h: 'impressions_1h',
  likes_24h: 'likes_24h',
  retweets_24h: 'retweets_24h',
  replies_24h: 'replies_24h',
  impressions_24h: 'impressions_24h',
  engagement_rate: 'engagement_rate',
  viral_coefficient: 'viral_coefficient',
  collected_at: 'collected_at',
  last_update_at: 'last_update_at'
};

exports.Prisma.Cot_draftsScalarFieldEnum = {
  id: 'id',
  session_id: 'session_id',
  concept_number: 'concept_number',
  title: 'title',
  hook: 'hook',
  angle: 'angle',
  format: 'format',
  content: 'content',
  thread_content: 'thread_content',
  visual_guide: 'visual_guide',
  timing: 'timing',
  hashtags: 'hashtags',
  news_source: 'news_source',
  source_url: 'source_url',
  kpis: 'kpis',
  risk_assessment: 'risk_assessment',
  optimization_tips: 'optimization_tips',
  status: 'status',
  edited_content: 'edited_content',
  scheduled_at: 'scheduled_at',
  posted_at: 'posted_at',
  post_id: 'post_id',
  viral_score: 'viral_score',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Cot_phasesScalarFieldEnum = {
  id: 'id',
  session_id: 'session_id',
  phase_number: 'phase_number',
  think_prompt: 'think_prompt',
  think_result: 'think_result',
  think_tokens: 'think_tokens',
  think_at: 'think_at',
  execute_result: 'execute_result',
  execute_duration: 'execute_duration',
  execute_at: 'execute_at',
  integrate_prompt: 'integrate_prompt',
  integrate_result: 'integrate_result',
  integrate_tokens: 'integrate_tokens',
  integrate_at: 'integrate_at',
  status: 'status',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Cot_sessionsScalarFieldEnum = {
  id: 'id',
  theme: 'theme',
  style: 'style',
  platform: 'platform',
  status: 'status',
  current_phase: 'current_phase',
  current_step: 'current_step',
  last_error: 'last_error',
  retry_count: 'retry_count',
  next_retry_at: 'next_retry_at',
  total_tokens: 'total_tokens',
  total_duration: 'total_duration',
  created_at: 'created_at',
  updated_at: 'updated_at',
  completed_at: 'completed_at',
  metadata: 'metadata'
};

exports.Prisma.Gpt_analysesScalarFieldEnum = {
  id: 'id',
  analysis_type: 'analysis_type',
  prompt: 'prompt',
  response: 'response',
  tokens: 'tokens',
  duration: 'duration',
  metadata: 'metadata',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Interaction_historyScalarFieldEnum = {
  id: 'id',
  type: 'type',
  source_tweet_id: 'source_tweet_id',
  target_tweet_id: 'target_tweet_id',
  content: 'content',
  created_at: 'created_at'
};

exports.Prisma.Job_queueScalarFieldEnum = {
  id: 'id',
  type: 'type',
  status: 'status',
  payload: 'payload',
  result: 'result',
  error: 'error',
  progress: 'progress',
  total: 'total',
  started_at: 'started_at',
  ended_at: 'ended_at',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.News_analysesScalarFieldEnum = {
  id: 'id',
  article_id: 'article_id',
  category: 'category',
  summary: 'summary',
  japanese_summary: 'japanese_summary',
  key_points: 'key_points',
  impact: 'impact',
  analyzed_by: 'analyzed_by',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.News_analysis_jobsScalarFieldEnum = {
  id: 'id',
  type: 'type',
  status: 'status',
  started_at: 'started_at',
  completed_at: 'completed_at',
  error: 'error',
  result: 'result',
  metadata: 'metadata',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.News_analysis_resultsScalarFieldEnum = {
  id: 'id',
  job_id: 'job_id',
  article_id: 'article_id',
  importance_score: 'importance_score',
  category: 'category',
  summary_ja: 'summary_ja',
  key_points: 'key_points',
  impact_assessment: 'impact_assessment',
  expert_perspective: 'expert_perspective',
  metadata: 'metadata',
  created_at: 'created_at'
};

exports.Prisma.News_articlesScalarFieldEnum = {
  id: 'id',
  source_id: 'source_id',
  title: 'title',
  summary: 'summary',
  content: 'content',
  url: 'url',
  published_at: 'published_at',
  category: 'category',
  importance: 'importance',
  processed: 'processed',
  created_at: 'created_at',
  metadata: 'metadata'
};

exports.Prisma.News_sourcesScalarFieldEnum = {
  id: 'id',
  name: 'name',
  url: 'url',
  type: 'type',
  category: 'category',
  active: 'active',
  created_at: 'created_at'
};

exports.Prisma.News_thread_itemsScalarFieldEnum = {
  id: 'id',
  thread_id: 'thread_id',
  article_id: 'article_id',
  tweet_id: 'tweet_id',
  parent_tweet_id: 'parent_tweet_id',
  posted_at: 'posted_at',
  content: 'content',
  metadata: 'metadata',
  position: 'position'
};

exports.Prisma.News_threadsScalarFieldEnum = {
  id: 'id',
  status: 'status',
  created_at: 'created_at',
  metadata: 'metadata',
  scheduled_at: 'scheduled_at',
  title: 'title',
  posted_at: 'posted_at'
};

exports.Prisma.News_viral_relationsScalarFieldEnum = {
  id: 'id',
  news_id: 'news_id',
  session_id: 'session_id',
  relevance_score: 'relevance_score',
  used_in_content: 'used_in_content',
  created_at: 'created_at'
};

exports.Prisma.Perplexity_reportsScalarFieldEnum = {
  id: 'id',
  query: 'query',
  focus: 'focus',
  rawAnalysis: 'rawAnalysis',
  trends: 'trends',
  insights: 'insights',
  personal_angles: 'personal_angles',
  buzz_prediction: 'buzz_prediction',
  recommendations: 'recommendations',
  metadata: 'metadata',
  created_at: 'created_at'
};

exports.Prisma.Post_analyticsScalarFieldEnum = {
  id: 'id',
  scheduled_post_id: 'scheduled_post_id',
  impressions: 'impressions',
  likes: 'likes',
  retweets: 'retweets',
  replies: 'replies',
  profile_clicks: 'profile_clicks',
  link_clicks: 'link_clicks',
  measured_at: 'measured_at',
  engagement_rate: 'engagement_rate',
  ai_analysis: 'ai_analysis'
};

exports.Prisma.Prompt_templatesScalarFieldEnum = {
  id: 'id',
  name: 'name',
  type: 'type',
  template: 'template',
  variables: 'variables',
  is_active: 'is_active',
  metadata: 'metadata',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Scheduled_postsScalarFieldEnum = {
  id: 'id',
  content: 'content',
  scheduled_time: 'scheduled_time',
  status: 'status',
  post_type: 'post_type',
  ref_post_id: 'ref_post_id',
  template_type: 'template_type',
  ai_generated: 'ai_generated',
  ai_prompt: 'ai_prompt',
  edited_content: 'edited_content',
  posted_at: 'posted_at',
  post_result: 'post_result',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Scheduled_retweetsScalarFieldEnum = {
  id: 'id',
  original_post_id: 'original_post_id',
  original_content: 'original_content',
  scheduled_at: 'scheduled_at',
  status: 'status',
  rt_strategy: 'rt_strategy',
  add_comment: 'add_comment',
  comment_text: 'comment_text',
  viral_draft_id: 'viral_draft_id',
  cot_draft_id: 'cot_draft_id',
  executed_at: 'executed_at',
  rt_post_id: 'rt_post_id',
  error: 'error',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Session_activity_logsScalarFieldEnum = {
  id: 'id',
  session_id: 'session_id',
  session_type: 'session_type',
  activity_type: 'activity_type',
  details: 'details',
  created_at: 'created_at'
};

exports.Prisma.SessionsScalarFieldEnum = {
  id: 'id',
  session_token: 'session_token',
  user_id: 'user_id',
  expires: 'expires',
  created_at: 'created_at'
};

exports.Prisma.Unified_performanceScalarFieldEnum = {
  id: 'id',
  content_id: 'content_id',
  content_type: 'content_type',
  metrics_30m: 'metrics_30m',
  metrics_1h: 'metrics_1h',
  metrics_24h: 'metrics_24h',
  engagement_rate: 'engagement_rate',
  viral_coefficient: 'viral_coefficient',
  collected_at: 'collected_at',
  updated_at: 'updated_at'
};

exports.Prisma.UsersScalarFieldEnum = {
  id: 'id',
  twitter_id: 'twitter_id',
  username: 'username',
  name: 'name',
  email: 'email',
  image: 'image',
  access_token: 'access_token',
  refresh_token: 'refresh_token',
  token_secret: 'token_secret',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.Viral_analysis_logsScalarFieldEnum = {
  id: 'id',
  model: 'model',
  phase: 'phase',
  prompt: 'prompt',
  response: 'response',
  tokens: 'tokens',
  duration: 'duration',
  success: 'success',
  error: 'error',
  created_at: 'created_at'
};

exports.Prisma.Viral_configScalarFieldEnum = {
  id: 'id',
  key: 'key',
  value: 'value',
  description: 'description',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Viral_draft_performanceScalarFieldEnum = {
  id: 'id',
  draft_id: 'draft_id',
  likes_30m: 'likes_30m',
  retweets_30m: 'retweets_30m',
  replies_30m: 'replies_30m',
  impressions_30m: 'impressions_30m',
  likes_1h: 'likes_1h',
  retweets_1h: 'retweets_1h',
  replies_1h: 'replies_1h',
  impressions_1h: 'impressions_1h',
  likes_24h: 'likes_24h',
  retweets_24h: 'retweets_24h',
  replies_24h: 'replies_24h',
  impressions_24h: 'impressions_24h',
  engagement_rate: 'engagement_rate',
  viral_coefficient: 'viral_coefficient',
  collected_at: 'collected_at',
  updated_at: 'updated_at'
};

exports.Prisma.Viral_draftsScalarFieldEnum = {
  id: 'id',
  session_id: 'session_id',
  concept_id: 'concept_id',
  title: 'title',
  content: 'content',
  hashtags: 'hashtags',
  visual_note: 'visual_note',
  status: 'status',
  scheduled_at: 'scheduled_at',
  posted_at: 'posted_at',
  tweet_id: 'tweet_id',
  created_at: 'created_at',
  updated_at: 'updated_at',
  character_id: 'character_id',
  character_note: 'character_note',
  source_url: 'source_url',
  news_article_id: 'news_article_id',
  edited_at: 'edited_at',
  edited_content: 'edited_content',
  is_edited: 'is_edited',
  post_history: 'post_history',
  source_tweets: 'source_tweets',
  thread_structure: 'thread_structure'
};

exports.Prisma.Viral_opportunitiesScalarFieldEnum = {
  id: 'id',
  topic: 'topic',
  platform: 'platform',
  viral_score: 'viral_score',
  time_window: 'time_window',
  angle: 'angle',
  keywords: 'keywords',
  source_data: 'source_data',
  status: 'status',
  analyzed_at: 'analyzed_at',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Viral_post_performanceScalarFieldEnum = {
  id: 'id',
  post_id: 'post_id',
  impressions_30m: 'impressions_30m',
  likes_30m: 'likes_30m',
  retweets_30m: 'retweets_30m',
  comments_30m: 'comments_30m',
  impressions_1h: 'impressions_1h',
  likes_1h: 'likes_1h',
  retweets_1h: 'retweets_1h',
  comments_1h: 'comments_1h',
  impressions_24h: 'impressions_24h',
  likes_24h: 'likes_24h',
  retweets_24h: 'retweets_24h',
  comments_24h: 'comments_24h',
  followers_24h: 'followers_24h',
  engagement_rate: 'engagement_rate',
  viral_coefficient: 'viral_coefficient',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Viral_postsScalarFieldEnum = {
  id: 'id',
  opportunity_id: 'opportunity_id',
  concept_type: 'concept_type',
  content: 'content',
  thread_content: 'thread_content',
  visual_guide: 'visual_guide',
  hashtags: 'hashtags',
  post_type: 'post_type',
  platform: 'platform',
  scheduled_at: 'scheduled_at',
  posted_at: 'posted_at',
  post_url: 'post_url',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Viral_sessionsScalarFieldEnum = {
  id: 'id',
  theme: 'theme',
  platform: 'platform',
  style: 'style',
  status: 'status',
  created_at: 'created_at',
  topics: 'topics',
  concepts: 'concepts',
  selected_ids: 'selected_ids',
  contents: 'contents',
  character_profile_id: 'character_profile_id',
  voice_style_mode: 'voice_style_mode',
  current_step: 'current_step',
  step_status: 'step_status',
  post_format: 'post_format'
};

exports.Prisma.Watchlist_tweetsScalarFieldEnum = {
  id: 'id',
  tweet_id: 'tweet_id',
  watchlist_user_id: 'watchlist_user_id',
  content: 'content',
  likes_count: 'likes_count',
  retweets_count: 'retweets_count',
  replies_count: 'replies_count',
  impressions_count: 'impressions_count',
  has_replied: 'has_replied',
  has_quoted: 'has_quoted',
  posted_at: 'posted_at',
  collected_at: 'collected_at',
  url: 'url',
  media_urls: 'media_urls'
};

exports.Prisma.Watchlist_usersScalarFieldEnum = {
  id: 'id',
  twitter_id: 'twitter_id',
  username: 'username',
  display_name: 'display_name',
  profile_image: 'profile_image',
  bio: 'bio',
  followers_count: 'followers_count',
  category: 'category',
  notes: 'notes',
  priority: 'priority',
  is_following: 'is_following',
  added_at: 'added_at',
  last_checked: 'last_checked',
  user_id: 'user_id'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullableJsonNullValueInput = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull
};

exports.Prisma.JsonNullValueInput = {
  JsonNull: Prisma.JsonNull
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.JsonNullValueFilter = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull,
  AnyNull: Prisma.AnyNull
};
exports.Gender = exports.$Enums.Gender = {
  male: 'male',
  female: 'female',
  other: 'other'
};

exports.cot_draft_status = exports.$Enums.cot_draft_status = {
  DRAFT: 'DRAFT',
  EDITED: 'EDITED',
  SCHEDULED: 'SCHEDULED',
  POSTED: 'POSTED',
  ARCHIVED: 'ARCHIVED'
};

exports.cot_phase_status = exports.$Enums.cot_phase_status = {
  PENDING: 'PENDING',
  THINKING: 'THINKING',
  EXECUTING: 'EXECUTING',
  INTEGRATING: 'INTEGRATING',
  COMPLETED: 'COMPLETED',
  FAILED: 'FAILED'
};

exports.cot_session_status = exports.$Enums.cot_session_status = {
  PENDING: 'PENDING',
  THINKING: 'THINKING',
  EXECUTING: 'EXECUTING',
  INTEGRATING: 'INTEGRATING',
  COMPLETED: 'COMPLETED',
  FAILED: 'FAILED',
  PAUSED: 'PAUSED'
};

exports.cot_phase_step = exports.$Enums.cot_phase_step = {
  THINK: 'THINK',
  EXECUTE: 'EXECUTE',
  INTEGRATE: 'INTEGRATE'
};

exports.PostStatus = exports.$Enums.PostStatus = {
  DRAFT: 'DRAFT',
  SCHEDULED: 'SCHEDULED',
  POSTED: 'POSTED',
  FAILED: 'FAILED'
};

exports.PostType = exports.$Enums.PostType = {
  NEW: 'NEW',
  RETWEET: 'RETWEET',
  QUOTE: 'QUOTE'
};

exports.rt_status = exports.$Enums.rt_status = {
  SCHEDULED: 'SCHEDULED',
  EXECUTED: 'EXECUTED',
  FAILED: 'FAILED',
  CANCELLED: 'CANCELLED'
};

exports.Prisma.ModelName = {
  accounts: 'accounts',
  ai_patterns: 'ai_patterns',
  api_error_logs: 'api_error_logs',
  api_tasks: 'api_tasks',
  buzz_config: 'buzz_config',
  buzz_posts: 'buzz_posts',
  character_profiles: 'character_profiles',
  collection_presets: 'collection_presets',
  content_drafts: 'content_drafts',
  cot_draft_performance: 'cot_draft_performance',
  cot_drafts: 'cot_drafts',
  cot_phases: 'cot_phases',
  cot_sessions: 'cot_sessions',
  gpt_analyses: 'gpt_analyses',
  interaction_history: 'interaction_history',
  job_queue: 'job_queue',
  news_analyses: 'news_analyses',
  news_analysis_jobs: 'news_analysis_jobs',
  news_analysis_results: 'news_analysis_results',
  news_articles: 'news_articles',
  news_sources: 'news_sources',
  news_thread_items: 'news_thread_items',
  news_threads: 'news_threads',
  news_viral_relations: 'news_viral_relations',
  perplexity_reports: 'perplexity_reports',
  post_analytics: 'post_analytics',
  prompt_templates: 'prompt_templates',
  scheduled_posts: 'scheduled_posts',
  scheduled_retweets: 'scheduled_retweets',
  session_activity_logs: 'session_activity_logs',
  sessions: 'sessions',
  unified_performance: 'unified_performance',
  users: 'users',
  viral_analysis_logs: 'viral_analysis_logs',
  viral_config: 'viral_config',
  viral_draft_performance: 'viral_draft_performance',
  viral_drafts: 'viral_drafts',
  viral_opportunities: 'viral_opportunities',
  viral_post_performance: 'viral_post_performance',
  viral_posts: 'viral_posts',
  viral_sessions: 'viral_sessions',
  watchlist_tweets: 'watchlist_tweets',
  watchlist_users: 'watchlist_users'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }

        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
